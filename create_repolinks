#!/bin/bash
# Script that creates symlinks from repositories, and cleans up the .git/config entries:
# 1) For Gentoo overlays, it symlinks the repo from the overlay dir to the gentoo repos dir.
# 2) For Gentoo repos, it symlinks the repo from the distdir to the gentoo repos dir.
# 3) For KDE repos, it symlinks the repo from distdir to kde repos dir.
# 4) For SUSE repos, it replaces git user.email with the suse mail (or creates it)
# The script needs a in ~/.gitconfig similar to the one included in this repository.
# TODO: A lot of code duplication, needs functions ASAP
# TODO: Check repos and mail in TAMPAKRAP_REPO_DIR
# TODO: Fix github repos as well
# TODO: Add pushUrl instead of sed the URL

# Headers
source /etc/make.conf
. /etc/init.d/functions.sh

# Variables
REPO_DIR="/home/tampakrap/Source_Code"
GENTOO_REPO_DIR="${REPO_DIR}/gentoo"
KDE_REPO_DIR="${REPO_DIR}/kde"
SUSE_REPO_DIR="${REPO_DIR}/suse"
LINUXTEAM_REPO_DIR="${REPO_DIR}/linuxteam"
OVERLAY_DIR="/var/lib/layman/"

if [[ $UID == 0 ]]; then
	eerror 'root is forbidden'
	exit 1
fi

einfo "### Gentoo Overlays ###"
cd $OVERLAY_DIR
for repo in `ls -d */`; do
	repo=${repo%/}
	pushd $repo > /dev/null
	einfo "Checking $repo overlay"
	if grep -q gentoo.org .git/config; then
		sed -i -r "s#[^[:space:]]*git[[:digit:]]?.(overlays.)?gentoo.org[/:]#gentoo:#g" .git/config &&
		ewarn "Gentoo Git URL corrected for $repo overlay"
	fi
	[[ -L ${GENTOO_REPO_DIR}/$repo ]] || ( \
		rm -rf ${GENTOO_REPO_DIR}/$repo &&
		ln -s ${OVERLAY_DIR}/$repo ${GENTOO_REPO_DIR} &&
		ewarn "New symlink for $repo overlay" )
	popd > /dev/null
done

einfo "### Gentoo Repositories ###"
cd $DISTDIR/egit-src
for repo in `ls -d */`; do
	if grep -q -e gentoo.org -e gentoo: $repo/.git/config; then
		repo=${repo%/}
		pushd $repo > /dev/null
		einfo "Checking $repo repository"
		if grep -q gentoo.org .git/config; then
			sed -i -r "s#[^[:space:]]*git[[:digit:]]?.(overlays.)?gentoo.org[/:]#gentoo:#g" .git/config &&
			ewarn "Gentoo Git URL corrected for $repo repository"
		fi
		[[ -L ${GENTOO_REPO_DIR}$repo ]] || ( \
			rm -rf ${GENTOO_REPO_DIR}/$repo &&
			ln -s ${DISTDIR}/egit-src/$repo ${GENTOO_REPO_DIR} &&
			ewarn "New symlink for $repo repository" )
		popd > /dev/null
	fi
done

einfo "### KDE Rrepositories ###"
cd $DISTDIR/egit-src
for repo in `ls -d */`; do
	if grep -q -e kde.org -e kde: $repo/.git/config; then
		repo=${repo%/}
		pushd $repo > /dev/null
		einfo "Checking $repo repository"
		if grep -q kde.org .git/config; then
			sed -i -r "s#[^[:space:]]*git[[:digit:]]?.kde.org[/:]#kde:#g" .git/config &&
			ewarn "KDE Git URL corrected for $repo"
		fi
		[[ -L ${KDE_REPO_DIR}/$repo ]] || ( \
			rm -rf ${KDE_REPO_DIR}/$repo &&
			ln -s ${DISTDIR}/egit-src/$repo ${KDE_REPO_DIR} &&
			ewarn "New symlink for $repo repository" )
		popd > /dev/null
	fi
done

einfo "### SUSE Repositories ###"
cd $SUSE_REPO_DIR
for repo in `ls -d */` `ls -d tampakrap/*/` `ls -d conversions/*/`; do
	repo=${repo%/}
	if [[ -d $repo/.git ]]; then
		pushd $repo > /dev/null
		einfo "Checking $repo repository"
		REPO_GIT_EMAIL=`grep email .git/config | awk -F'= ' '{ print $2 }'`
		if [[ -n $REPO_GIT_EMAIL ]] && [[ $REPO_GIT_EMAIL != "tchatzimichos@suse.com" ]]; then
			sed -i -e "s:${REPO_GIT_EMAIL}:tchatzimichos@suse.com:" .git/config &&
			ewarn "Corrected SUSE mail for $repo repository"
		fi
		[[ ! -n $REPO_GIT_EMAIL ]] && ( \
			git config user.email "tchatzimichos@suse.com" &&
			ewarn "Added SUSE mail for $repo repository" )
		popd > /dev/null
	fi
done

einfo "### LinuxTeam Repositories ###"
cd $LINUXTEAM_REPO_DIR
for repo in `ls -d */`; do
    repo=${repo%/}
    if [[ -d $repo/.git ]]; then
        pushd $repo > /dev/null
        einfo "Checking $repo repository"
        REPO_GIT_EMAIL=`grep email .git/config | awk -F'= ' '{ print $2 }'`
        if [[ -n $REPO_GIT_EMAIL ]] && [[ $REPO_GIT_EMAIL != "tampakrap@linuxteam.teilar.gr" ]]; then
            sed -i -e "s:${REPO_GIT_EMAIL}:tampakrap@linuxteam.teilar.gr:" .git/config &&
            ewarn "Corrected LinuxTeam mail for $repo repository"
        fi
        [[ ! -n $REPO_GIT_EMAIL ]] && ( \
            git config user.email "linuxteam.teilar.gr" &&
            ewarn "Added LinuxTeam mail for $repo repository" )
        popd > /dev/null
    fi
done

einfo "### CLEAN BAD SYMLINKS ###"
for dir in ${GENTOO_REPO_DIR} ${KDE_REPO_DIR}; do
	cd $dir
	for item in `ls -1`; do
		if [[ -L $item ]] && ! pushd $item > /dev/null 2>&1; then
			rm $item && ewarn "Removed bad symlink $item"
		else
			popd > /dev/null 2>&1
		fi
	done
done
